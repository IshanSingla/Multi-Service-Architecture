version: '3.8'

services:
    # PostgreSQL for Authorization Service

    postgres:
        image: postgres:latest
        container_name: postgres
        restart: always
        environment:
            POSTGRES_USER: bfh_owner
            POSTGRES_PASSWORD: vojbNhuHA9R1
        networks:
            - app-network
        volumes:
            - ./db/postgres:/var/lib/postgresql/data
            - ./log/postgres:/var/log/postgres

    # Redis for Authorization Service
    redis:
        image: redis:latest
        container_name: redis
        restart: always
        command:
            - 'redis-server'
            - '--requirepass'
            - 'zBQnYSwQ3n3Dq1fsoLnDaECPhFN3BJ5R'
        networks:
            - app-network

    # MongoDB for Cart Service
    mongodb:
        image: mongo:latest
        container_name: mongodb
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: bfh_owner
            MONGO_INITDB_ROOT_PASSWORD: vojbNhuHA9R1
            MONGO_INITDB_DATABASE: bfh_cart
        networks:
            - app-network
        volumes:
            - ./db/mongodb:/data/db
            - ./log/mongodb:/var/log/mongodb_cart

    # Authorization Service
    authservice:
        build: ./auth-services
        container_name: authservice
        restart: always
        environment:
            DATABASE_URL: postgresql://bfh_owner:vojbNhuHA9R1@postgres:5432/bfh_auth
            REDIS_HOST: redis
            REDIS_PASSWORD: zBQnYSwQ3n3Dq1fsoLnDaECPhFN3BJ5R
        depends_on:
            - postgres
            - redis
        networks:
            - app-network
        volumes:
            - ./log/authservice:/app/logs

    # Product Service
    productservice:
        build: ./product-services
        container_name: productservice
        restart: always
        environment:
            DATABASE_URL: postgresql://bfh_owner:vojbNhuHA9R1@postgres:5432/bfh_product
            REDIS_HOST: redis
            REDIS_PASSWORD: zBQnYSwQ3n3Dq1fsoLnDaECPhFN3BJ5R
        depends_on:
            - postgres
            - redis
        networks:
            - app-network
        volumes:
            - ./log/productservice:/app/logs

    # Cart Service
    cartservice:
        build: ./Cart Service
        container_name: cartservice
        restart: always
        environment:
            DATABASE_URL: mongodb://bfh_owner:vojbNhuHA9R1@mongodb:27017/bfh_cart
            AUTH_SERVICE_URL: http://authservice:3000
            PRODUCT_SERVICE_URL: http://productservice:3000
        depends_on:
            - mongodb
            - productservice
            - authservice
        networks:
            - app-network
        volumes:
            - ./log/cartservice:/app/logs

    # Coupon Service
    couponservice:
        build: ./Coupon Service
        container_name: couponservice
        restart: always
        environment:
            DATABASE_URL: postgresql://bfh_owner:vojbNhuHA9R1@postgres:5432/bfh_coupon
            AUTH_SERVICE_URL: http://authservice:3000
            PRODUCT_SERVICE_URL: http://productservice:3000
            CART_SERVICE_URL: http://cartservice:3000
        depends_on:
            - postgres
            - productservice
            - authservice
            - cartservice
        networks:
            - app-network
        volumes:
            - ./log/couponservice:/app/logs

    # Checkout Service
    checkoutservice:
        build: ./Checkout Service
        container_name: checkoutservice
        restart: always
        environment:
            DATABASE_URL: postgresql://bfh_owner:vojbNhuHA9R1@postgres:5432/bfh_checkout
            AUTH_SERVICE_URL: http://authservice:3000
            PRODUCT_SERVICE_URL: http://productservice:3000
            CART_SERVICE_URL: http://cartservice:3000
            COUPON_SERVICE_URL: http://couponservice:3000
        depends_on:
            - postgres
            - productservice
            - authservice
            - cartservice
            - couponservice
        networks:
            - app-network
        volumes:
            - ./log/checkoutservice:/app/logs

        # Nginx
    nginx:
        image: nginx:latest
        container_name: nginx
        restart: always
        ports:
            - '80:80'
        volumes:
            - ./API Gateway/nginx.conf:/etc/nginx/nginx.conf
            - ./log/nginx:/var/log/nginx # Detach volume for Nginx logs
        depends_on:
            - authservice
            - productservice
            - cartservice
            - couponservice
            - checkoutservice
        networks:
            - app-network

networks:
    app-network:
        driver: bridge
